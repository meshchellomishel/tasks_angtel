
Задание 10.1.

Разработать программу, которая динамически конфигурирует ARP-таблицу в
соответствии с базой данных Redis.

Организация базы данных.
1. Ключ neigh-config - хэш-таблица. Хранит MAC-адреса, индексируемые
IP-адресами.
2. Канал событий config-change. Каждое событие сообщает об изменении
хэш-таблицы neigh-config и имеет структуру neigh-<ip-address>, где ip-address
- ключ изменившегося поля таблицы. Тип изменения (добавление или удаление)
программа определяет по текущему содержимому neigh-config: если после
получения события для addrX таблица neigh-config содержит ключ addrX, значит
была добавлена новая запись, если нет - удалена старая.

Требования.
1. Применение первоначальной конфигурации. Программа должна после запуска
прочитать таблицу neigh-config и создать в операционной системе
соответствующие статические (permanent) записи в ARP-таблице. Старые
статические ARP-записи, которые отсутствуют в neigh-config, должны быть
удалены из ОС.
2. Динамическое обновление конфигурации. Программа должна подписаться на канал
событий config-change. Для каждого события должно вноситься соответствующее
изменение в ARP-таблицу - создание новой статической записи, удаление или
изменение существующей.

Пример.
Пусть в БД Redis задана следующая начальная конфигурация:
{
	"neigh-config" : {
		"192.168.2.20" : "22:22:22:22:22:22",
		"192.168.3.30" : "33:33:33:33:33:33",
	}
}

В ARP-таблице находятся следующие записи:
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.5.50 dev eth0 lladdr 55:55:55:55:55:55 PERMANENT

Запускаем программу конфигурирования:
$ ./lab10.1.py

Новая ARP-таблица:
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.2.20 dev eth0 lladdr 22:22:22:22:22:22 PERMANENT
192.168.3.30 dev eth0 lladdr 33:33:33:33:33:33 PERMANENT

Удаляем запись из базы данных:
> HDEL neigh-config 192.168.3.30
(integer) 1
> PUBLISH config-changes neigh-192.168.3.30
(integer) 1

Новая ARP-таблица:
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.2.20 dev eth0 lladdr 22:22:22:22:22:22 PERMANENT

Создаем запись в базе данных:
> HSET neigh-config 192.168.4.40 44:44:44:44:44:44
(integer) 1
> PUBLISH config-changes neigh-192.168.4.40
(integer) 1

Новая ARP-таблица:
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.2.20 dev eth0 lladdr 22:22:22:22:22:22 PERMANENT
192.168.4.40 dev eth0 lladdr 44:44:44:44:44:44 PERMANENT

Задание 10.2.

Разработать программу, которая динамически индицирует состояние ARP-таблицы в
базе данных Redis.

Организация базы данных.
1. Ключ neigh-state - хэш-таблица. Хранит MAC-адреса, индексируемые
IP-адресами.
2. Канал событий state-change. Каждое событие сообщает об изменении
хэш-таблицы neigh-state и имеет структуру neigh-<ip-address>, где ip-address
- ключ изменившегося поля таблицы.

Требования.
1. Индикация первоначального состояния. Программа должна после запуска
прочитать активные (reachable) динамические записи из ARP-таблицы операционной
системе и создать в базе данных хэш-таблицу neigh-state с соответствующим
содержимым.
2. Динамическое обновление состояния. Программа должна мониторить сообщения
Netlink об изменении ARP-таблицы. Если какая-то запись становится неактивной
или удаляется, то соответствующее поле в neigh-state должно быть удалено.
Если какая-то динамическая запись становится активной или существующая
активная запись меняет свои атрибуты, то соответствующее поле в neigh-state
должно быть создано (обновлено). Для каждого изменения neigh-state программа
должна отправлять событие в канал state-change.

Пример.
Пусть в ARP-таблице находятся следующие записи:
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.5.50 dev eth0 lladdr 55:55:55:55:55:55 PERMANENT

Запускаем программу индикации:
$ ./lab10.2.py

Новый статус в базе данных:
> HKEYS neigh-state
1) "192.168.1.1"

Добавляем новую динамическую запись в ARP-таблицу:
# ip neigh add 192.168.2.20 lladdr 22:22:22:22:22:22 dev eth0 nud reachable
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.5.50 dev eth0 lladdr 55:55:55:55:55:55 PERMANENT
192.168.2.20 dev eth0 lladdr 22:22:22:22:22:22 REACHABLE

Новый статус в базе данных:
> HKEYS neigh-state
1) "192.168.1.1"
2) "192.168.2.20"

Дожидаемся устаревания записи в ARP-таблице:
# ip neigh show
192.168.1.1 dev eth0 lladdr 08:60:6e:61:34:74 REACHABLE
192.168.5.50 dev eth0 lladdr 55:55:55:55:55:55 PERMANENT
192.168.2.20 dev eth0 lladdr 22:22:22:22:22:22 STALE

Новый статус в базе данных:
> HKEYS neigh-state
1) "192.168.1.1"

Удаляем запись из ARP-таблицы:
# ip neigh del 192.168.1.1 dev eth0
# ip neigh show
192.168.5.50 dev eth0 lladdr 55:55:55:55:55:55 PERMANENT
192.168.2.20 dev eth0 lladdr 22:22:22:22:22:22 STALE

Новый статус в базе данных:
> HKEYS neigh-state
(empty array)
